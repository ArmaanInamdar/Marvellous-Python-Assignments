import os
import sys
import time
import hashlib
import schedule
import smtplib
from email.message import EmailMessage

def send_mail(mail,path,starttime,totalfiles,Cnt):
    sender_email = "inamdararmaan2@gmail.com"
    receiver_email = mail
    subject = "Delete Duplicate"
    password = "cfzhjakehqunucqo"

    attachment_path = path

    msg = EmailMessage()
    msg['From'] = sender_email
    msg['To'] = receiver_email
    msg['Subject'] = subject
    msg.set_content(f"""\
Hello,

This is an automated report generated by the duplicate file cleaner script.

Scanning started at: {starttime}
Total files scanned: {totalfiles}
Total duplicate files deleted: {Cnt}

Please find the detailed log file attached.

Regards,  
Armaan (Python Script)
""")



    try:
        with open(path, 'rb') as f:
            file_data = f.read()
            file_name = os.path.basename(path)
            msg.add_attachment(file_data, maintype='application', subtype='octet-stream', filename=file_name)
    except Exception as e:
        print("Error reading log file:", e)
        return

    try:
        with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp:
            smtp.login(sender_email, password)
            smtp.send_message(msg)
        print("Email sent successfully!")
    except Exception as e:
        print("Error sending email:", e)


def CalculateCheckSum(path, BlockSize = 1024):
    fobj = open(path,'rb')

    hobj = hashlib.md5()

    buffer = fobj.read(BlockSize)
    while(len(buffer) > 0):
        hobj.update(buffer)
        buffer = fobj.read(1024)

    fobj.close()

    return hobj.hexdigest()

def FindDuplicate(DirectoryName = "Marvellous"):
    Flag = os.path.isabs(DirectoryName)
    if(Flag == False):
        DirectoryName = os.path.abspath(DirectoryName)

    flag = os.path.exists(DirectoryName)

    if(flag == False):
        print("The path is invalid")
        exit()

    flag = os.path.isdir(DirectoryName)

    if(flag == False):
        print("The path is valid but the target is not directory")
        exit()
    
    Duplicate = {}

    for FolderName, SubFolderNames, FileNames in os.walk(DirectoryName):
        for fname in FileNames:
            fname = os.path.join(FolderName,fname) 
            checksum = CalculateCheckSum(fname)

            if checksum in Duplicate:
                Duplicate[checksum].append(fname)
            else:
                Duplicate[checksum] = [fname]

    return Duplicate

def DeleteDuplicate(path):

    starttime = time.ctime()
    MyDict = FindDuplicate(path)
    totalfiles = sum(len(files) for files in MyDict.values())
    Result = list(filter(lambda x : len(x) > 1 , MyDict.values()))
    count = 0
    Cnt = 0
    L1 = []
    for value in Result:
        for subvalue in value:
            count = count + 1
            if(count > 1):
                print("Deleted file :",subvalue)
                L1.append(subvalue)
                os.remove(subvalue)
                Cnt = Cnt + 1
        count = 0
    
    print("Total deleted file :",Cnt)
    if not os.path.exists(path):
        os.mkdir(path)

    timestamp = time.ctime()
    timestamp = timestamp.replace(" ","")
    timestamp = timestamp.replace(":","_")
    timestamp = timestamp.replace("/","_")

    FileName = os.path.join(path,"Marvellous%s.log" %(timestamp))

    fobj = open(FileName,'w')
    for i in L1:
        fobj.write(i+" Deleted")
        fobj.write("\n")



    Border = "-"*80
    fobj.write(Border)
    fobj.write("\n\t\tMarvellous Infosystems Process Log\n")
    fobj.write("\t\tLog file is created at : "+time.ctime()+"\n")
    fobj.write(Border)

    send_mail(sys.argv[2],FileName,starttime,totalfiles,Cnt)
    

def main():

    if(len(sys.argv) == 2):
        if((sys.argv[1] == "--h") or (sys.argv[1] == "--H")):
            print("This application is used to perform directory cleaning")
            print("This is the Automation Script")

        elif((sys.argv[1] == "--u") or (sys.argv[1] == "--U")):
            print("Use the given Script as :")
            print("ScriptName.py NameofDirectory email_id TimeInterval")
            print("Please provide valid absolut path")

    if(len(sys.argv) == 4):
            schedule.every(int(sys.argv[3])).minutes.do(lambda: DeleteDuplicate(sys.argv[1]))
            while(True):
                schedule.run_pending()
                time.sleep(1)


    else:
        print("Invalid number of command line arguments")
        print("Use the given Flags as :")
        print("--h : Used to display the help")
        print("--u : Used to display the usage")



if __name__ == "__main__":
    main()